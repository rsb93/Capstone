#!/bin/bash
# testscript - v0.1

# base framework for the command line interface

# define our vars
NAME=$(basename $0)             # get the script name

DRYRUN=false                    # dry-run false by default
QUIET=false                     # quiet false by default
USAGE="Usage: ${NAME} [-hnvq] args"
VERBOSE=false                   # verbose false by default

# define our functions
function Help {
    echo -e "\tHelp Documentation for ${NAME}"
    echo -e "\t${USAGE}"
    echo -e "\t-h -- prints out this help documentation"
    echo -e "\t-n -- enables dry-run mode; prints what script would do"
    echo -e "\t-q -- quiet; prevents any output to command line"
    echo -e "\t-v -- verbose; enables more detailed output to command line"
    exit 1
}



# if no arguments are passed, printout usage
if [ $# -eq 0 ]
then
    # TODO - determine correct usage
    echo "$USAGE"
    exit
fi

# getopts gets the short options (the -[char] arguments)
while getopts ":hi:no:qv" OPTS
do
    # TODO -- should input and output be options or positional param args?
    #   should input and output be files or directories?
    case $OPTS in
        i )
            INPUT=$OPTARG ;;
        h )
            Help ;;    
        n )
            DRYRUN=true ;;
        o )
            OUTPUT=$OPTARG ;;
        q )
            QUIET=true; VERBOSE=false ;;
        v )
            VERBOSE=true; QUIET=false ;;
        ? )     # default case 
            echo -e "Unrecognized option -$OPTARG"
            echo -e "${USAGE}\nUse -h for more detail"; exit ;;
    esac
done

# shift to our first positional parameter argument
shift $((OPTIND - 1))

# while [ $# -ne 0 ]

python ISGDataPuller.py $INPUT $OUTPUT
exit 0
